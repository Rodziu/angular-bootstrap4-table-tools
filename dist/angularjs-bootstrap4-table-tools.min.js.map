{"version":3,"sources":["webpack://tableTools/webpack/universalModuleDefinition","webpack://tableTools/external \"angular\"","webpack://tableTools/external \"angularjs-bootstrap-4\"","webpack://tableTools/webpack/bootstrap","webpack://tableTools/webpack/runtime/compat get default export","webpack://tableTools/webpack/runtime/define property getters","webpack://tableTools/webpack/runtime/hasOwnProperty shorthand","webpack://tableTools/./.build/src/ts/lib/export/tt-export.component.ts","webpack://tableTools/./.build/src/ts/lib/export/export.module.ts","webpack://tableTools/./.build/src/ts/lib/pagination/tt-pagination.factory.ts","webpack://tableTools/./.build/src/ts/lib/pagination/tt-per-page.component.ts","webpack://tableTools/./.build/src/ts/lib/pagination/pagination.module.ts","webpack://tableTools/./.build/src/ts/lib/pagination/tt-pagination.component.ts","webpack://tableTools/./.build/src/ts/lib/search/tt-filter.directive.ts","webpack://tableTools/./.build/src/ts/lib/search/tt-search.factory.ts","webpack://tableTools/./.build/src/ts/lib/search/tt-search.component.ts","webpack://tableTools/./.build/src/ts/lib/search/search.module.ts","webpack://tableTools/./.build/src/ts/lib/select/tt-select.factory.ts","webpack://tableTools/./.build/src/ts/lib/select/tt-select.directive.ts","webpack://tableTools/./.build/src/ts/lib/select/tt-selected-click.directive.ts","webpack://tableTools/./.build/src/ts/lib/select/select.module.ts","webpack://tableTools/./.build/src/ts/lib/select/tt-select-all.directive.ts","webpack://tableTools/./.build/src/ts/lib/sort/tt-sort.factory.ts","webpack://tableTools/./.build/src/ts/lib/sort/tt-sort.directive.ts","webpack://tableTools/./.build/src/ts/lib/sort/sort.module.ts","webpack://tableTools/./src/ts/lib/table-tools.directive.ts","webpack://tableTools/./src/ts/lib/tt-row-placeholder.directive.ts","webpack://tableTools/./src/ts/lib/table-tools.module.ts","webpack://tableTools/../src/ts/angularjs-bootstrap4-table-tools.ts","webpack://tableTools/./src/ts/lib/table-tools.provider.ts","webpack://tableTools/./src/ts/lib/tt-footer.component.ts","webpack://tableTools/./src/ts/lib/tt-header.component.ts","webpack://tableTools/./src/ts/lib/tt-loading.component.ts","webpack://tableTools/./src/ts/lib/tt-results-count.component.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__734__","__WEBPACK_EXTERNAL_MODULE__635__","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","TtExportController","$document","$q","tableTools","this","exportTypes","separators","lang","separator","tabulator","modal","exporting","config","fileName","columnNames","headers","tableToolsCtrl","$element","columns","h","length","hasClass","push","txt","innerHTML","idx","exp","title","forEach","column","type","indexes","data","parseText","text","appendRow","row","join","exportCallback","rowId","c","includes","cellIndex","parentNode","trim","copyElement","_getCopyElement","val","focus","execCommand","createElement","item","blob","Blob","url","URL","createObjectURL","setAttribute","href","download","body","appendChild","click","remove","Error","when","then","_copyElement","append","ttExportComponent","controller","controllerAs","template","tableToolsExport","name","TtPagination","visiblePageCount","page","pages","start","end","items","pagesAround","Math","floor","resultsLength","perPage","ceil","pagesAfter","i","Infinity","min","tableToolsPagination","transclude","TtFilterController","$attrs","$observe","value","checkboxValue","ttFilterOperator","ttFilterEmpty","ttFilterOr","ttSearch","registerFilter","ttFilter","filterData","changes","unregisterFilter","ngModel","TtSearch","filters","search","field","splice","indexOf","result","controllers","filter","getValue","operator","isOr","keys","results","toLowerCase","getFilters","hasSearchString","allPassed","filterValues","passed","compareWithOperator","variable","find","values","tableToolsSearch","restrict","ngModelCtrl","bindToController","TtSelect","selectAll","ttSelected","ttSelectable","some","getSelected","TtSelectDirectiveController","TtSelectedClickDirectiveController","$scope","on","selected","ttSelect","ttSelectedClick","$apply","hasSelected","_hasSelected","attr","tableToolsSelect","replace","scope","TtSort","sortItems","sortItemsId","lastSortItems","v1","v2","isNumeric","string","parseFloat","isNaN","isFinite","index","localeCompare","orderValue","order","parsed","parseOrder","dir","col","orderItem","substring","parseOrderItem","_lastOrder","sortItem","updateState","TtSortDirectiveController","e","shiftKey","found","map","ttSort","register","unregister","state","removeClass","addClass","tableToolsSort","TableToolsController","$window","$filter","$http","$timeout","$log","ttPagination","lastResolve","id","timeout","dataLength","filteredCount","tableToolsOptions","pagination","scroll","perPageOptions","ttUrl","ttResolver","defaultTableToolsResolver","limit","offset","deferred","defer","post","getTableToolsData","response","resolve","reject","promise","orderUpdate","loading","cancel","getOrder","count","countFiltered","changePage","error","paginate","change","doSearch","compareFn","originalPage","scrollTo","round","getBoundingClientRect","top","pageYOffset","documentElement","scrollTop","scrollOffset","target","duration","cur","scrollY","performance","now","step","ts","elapsed","sin","PI","requestAnimationFrame","TtRowPlaceholderDirectiveController","number","first","prev","next","last","from","filteredResults","export","exportChooseColumns","flipSelection","exportColumnNames","exportSeparator","copy","csv","copiedToClipboard","noResults","alert","bindings","extraCondition"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,WAAYA,QAAQ,0BAC5B,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,mCAAoC,CAAC,UAAW,yBAA0BJ,GACvD,iBAAZC,QACdA,QAAQ,oCAAsCD,EAAQG,QAAQ,WAAYA,QAAQ,0BAElFJ,EAAK,oCAAsCC,EAAQD,EAAc,QAAGA,EAAK,0BAR3E,CASGO,QAAQ,SAASC,EAAkCC,GACtD,M,kCCVAN,EAAOD,QAAUM,G,QCAjBL,EAAOD,QAAUO,ICCbC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUV,QAG3C,IAAIC,EAASO,EAAyBE,GAAY,CAGjDV,QAAS,IAOV,OAHAW,EAAoBD,GAAUT,EAAQA,EAAOD,QAASS,GAG/CR,EAAOD,QCnBfS,EAAoBG,EAAKX,IACxB,IAAIY,EAASZ,GAAUA,EAAOa,WAC7B,IAAOb,EAAiB,QACxB,IAAM,EAEP,OADAQ,EAAoBM,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRJ,EAAoBM,EAAI,CAACf,EAASiB,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEnB,EAASkB,IAC5EE,OAAOC,eAAerB,EAASkB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ET,EAAoBU,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,2ECc5E,MAAOI,EAaT,YACIC,EACAC,EACAC,GAEAC,KAAKH,UAAYA,EACjBG,KAAKF,GAAKA,EACVE,KAAKD,WAAaA,EAElBC,KAAKC,YAAcF,EAAWE,YAC9BD,KAAKE,WAAa,CACd,CAACC,KAAM,IAAKC,UAAW,KACvB,CAACD,KAAM,IAAKC,UAAW,KACvB,CAACD,KAAMJ,EAAWI,KAAKE,UAAWD,UAAW,OAEjDJ,KAAKM,OAAQ,EACbN,KAAKO,WAAY,EACjBP,KAAKQ,OAAS,CACVJ,UAAW,IACXK,SAAU,GACVC,aAAa,GAIrB,aACI,MAAMC,EAAUX,KAAKY,eAAeC,SAAS,G,iBACvB,sCACtBb,KAAKc,QAAU,GACf,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQK,OAAQD,IAC3B,UAAgBJ,EAAQI,IAAIE,SAAS,kBACtCjB,KAAKc,QAAQI,KAAK,CACdC,IAAKR,EAAQI,GAAGK,UAChBC,IAAKN,EACLO,KAAK,IAIjBtB,KAAKQ,OAAOC,SAAWT,KAAKH,UAAU,GAAG0B,MACzCvB,KAAKM,OAAQ,EAGjB,gBACIN,KAAKc,QAAQU,SAASC,IAClBA,EAAOH,KAAOG,EAAOH,OAI7B,SAASI,EAAclB,GACnBR,KAAKO,UAAYmB,EACjB,MAAMC,EAAU,GACZC,EAAO,GACPC,EAAaC,IACL,aAAmBtB,EAAkB,aACrCsB,EAAOtB,EAAkB,UAAEsB,IAExBA,GAEXC,EAAY,KACJC,EAAIhB,SACS,QAATU,GAA2B,SAATA,EAClBE,EAAKV,KAAKc,EAAIC,KAAKjC,KAAKQ,OAAOJ,YAE/BwB,EAAKV,KAAKc,GAEdA,EAAM,KAGlB,IAAIA,EAAM,GAEVhC,KAAKc,QAAQU,SAASC,IACdA,EAAOH,MACPK,EAAQT,KAAKO,EAAOJ,KAChBrB,KAAKQ,OAAOE,aACZsB,EAAId,KAAKW,EAAUJ,EAAON,UAItCY,IAEA,MAAMjB,EAAUd,KAAKY,eAAeC,SAAS,G,iBACD,+CAC5C,IAYIqB,EAZAC,GAAS,EACb,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAQE,OAAQoB,IAC5BT,EAAQU,SAASvB,EAAQsB,GAAGE,aACxBxB,EAAQsB,GAAGG,WAAqB,WAAMJ,IACtCA,EAAQrB,EAAQsB,GAAGG,WAAqB,SACxCR,KAEJC,EAAId,KAAKW,EAAU,UAAgBf,EAAQsB,IAAIN,OAAOU,UAM9D,OAHAT,IAGQL,G,IACC,OACDQ,EAAkBN,IACd,MAAMa,EAAczC,KAAK0C,kBACzBD,EAAYE,IAAIf,EAAKK,KAAK,OAC1BQ,EAAY,GAAGG,QACdH,EAAY,YACbzC,KAAKH,UAAU,GAAGgD,YAAY,SAElC,M,IACC,MACDX,EAAiB,CAACN,EAAMpB,KACpB,MAAMzB,EAAIiB,KAAKH,UAAU,GAAGiD,cAAc,KACtCC,EAAO,SAAWnB,EAAKK,KAAK,MAC5Be,EAAO,IAAIC,KAAK,CAACF,GAAO,CAACrB,KAAM,mBAC/BwB,EAAMC,IAAIC,gBAAgBJ,GAC9BjE,EAAEsE,aAAa,QAAS,iBACxBtE,EAAEuE,KAAOJ,EACTnE,EAAEwE,SAAW/C,EAAOC,SAAW,OAC/BT,KAAKH,UAAU,GAAG2D,KAAKC,YAAY1E,GACnCA,EAAE2E,QACF3E,EAAE4E,UAEN,M,QAEA,IAAI,aAAmBnD,EAAiB,UAGpC,MAAM,IAAIoD,MAAM,yCAA2ClC,GAF3DQ,EAAiB1B,EAAiB,SAM9CR,KAAKF,GAAG+D,KAAK3B,EAAeN,EAAM5B,KAAKQ,SAASsD,MAAK,KAC7C,aAAmB9D,KAAKD,WAA+B,qBACvDC,KAAKD,WAA+B,mBAAE2B,GAE1C1B,KAAKO,WAAY,EACjBP,KAAKM,OAAQ,KAIb,kBAOJ,OANI,cAAoBN,KAAK+D,gBACzB/D,KAAK+D,aAAe,UAChB,4EAEJ,UAAgB/D,KAAKH,UAAU,GAAG2D,MAAMQ,OAAOhE,KAAK+D,eAEjD/D,KAAK+D,c,0CAIb,MAAME,EAAuC,CAChDC,WAAYtE,EACZuE,aAAc,KACdlG,QAAS,CACL2C,eAAgB,eAEpBwD,SAAA,26DCtKSC,EAHQ,SAAe,oBAAqB,CAAC,M,UAC3C,WAAYJ,GAEkBK,KCPvC,MAAOC,EAST,YAAYC,EAAmB,GANxB,KAAAC,KAAO,EACP,KAAAC,MAAQ,EACR,KAAAC,MAAQ,EACR,KAAAC,IAAM,EACN,KAAAC,MAAkB,GAGrB7E,KAAKwE,iBAAmBA,EACxBxE,KAAK8E,YAAcC,KAAKC,MAAMR,EAAmB,GAGrD,SAASS,EAAuBC,GAC5BlF,KAAK0E,MAAQK,KAAKI,KAAKF,EAAgBC,GACpB,IAAflF,KAAK0E,QACL1E,KAAK0E,MAAQ,GAEb1E,KAAKyE,KAAOzE,KAAK0E,QACjB1E,KAAKyE,KAAOzE,KAAK0E,OAErB1E,KAAK6E,MAAQ,GACb,MAAMO,EAAapF,KAAK0E,MAAQ1E,KAAKyE,KACrC,IAAIY,EAAIrF,KAAKyE,MACNW,EAAapF,KAAK8E,YACf9E,KAAKwE,iBAAmB,EAAIY,EAC5BpF,KAAK8E,aACXO,EAAI,IACJA,EAAI,GAER,GACIrF,KAAK6E,MAAM3D,KAAKmE,GAChBA,UACKrF,KAAK6E,MAAM7D,OAAShB,KAAKwE,kBAAoBa,GAAKrF,KAAK0E,OAChE1E,KAAK2E,MAAQO,IAAYI,IACnB,EACAP,KAAKQ,KACDvF,KAAKyE,KAAO,GAAKS,EAAW,EAC9BD,GAERjF,KAAK4E,IAAMG,KAAKQ,IAAIvF,KAAKyE,KAAOS,EAASD,ICvC1C,MCQMO,EALY,SAAe,wBAAyB,I,QACpD,gBFuCP,WACF,OAAOjB,K,UEvCI,YDLsC,CACjDtG,QAAS,CACL8B,WAAY,eAEhBoE,aAAc,KACdC,SAAU,4Q,UCCC,eCNyC,CACpDnG,QAAS,CACL8B,WAAY,eAEhBoE,aAAc,KACdsB,YAAY,EACZrB,SAAA,44CDEiDE,KEF/C,MAAOoB,EAUT,YAAYC,GACR3F,KAAK2F,OAASA,EACV,SAAUA,GAA6B,aAAnBA,EAAa,MACjCA,EAAOC,SAAS,SAAUC,IACtB7F,KAAK8F,cAAgBD,KAKjC,UACQ,cAAoB7F,KAAK+F,oBACzB/F,KAAK+F,iBAAmB,MAExB,cAAoB/F,KAAKgG,iBACzBhG,KAAKgG,cAAgB,IAEzBhG,KAAKiG,WAAa,eAAgBjG,KAAK2F,QAAW,SAAU3F,KAAK2F,QAAkC,aAAxB3F,KAAK2F,OAAa,KAC7F3F,KAAKD,WAAWmG,SAASC,eAAenG,KAAKoG,SAAUpG,MACvDA,KAAKD,WAAWsG,aAGpB,WAAWC,GACH,YAAaA,GAAW,eAAgBtG,MACxCA,KAAKD,WAAWsG,aAIxB,aACIrG,KAAKD,WAAWmG,SAASK,iBAAiBvG,KAAKoG,SAAUpG,MAG7D,WACI,OAAI,YAAkBA,KAAK8F,eAChB9F,KAAKwG,QAAUxG,KAAK8F,cAAgB9F,KAAKgG,cAE7ChG,KAAKwG,S,qBC3Cd,MAAOC,EAAb,cACY,KAAAC,QAAsD,GACvD,KAAAC,OAAS,GAEhB,eAAeC,EAAe1C,GACpB0C,KAAS5G,KAAK0G,UAChB1G,KAAK0G,QAAQE,GAAS,IAE1B5G,KAAK0G,QAAQE,GAAO1F,KAAKgD,GAG7B,iBAAiB0C,EAAe1C,GAC5BlE,KAAK0G,QAAQE,GAAOC,OAAO7G,KAAK0G,QAAQE,GAAOE,QAAQ5C,GAAa,GAC/DlE,KAAK0G,QAAQE,GAAO5F,eACdhB,KAAK0G,QAAQE,GAI5B,aACI,MAAMG,EAAS,GAoBf,OAnBA,UAAgB/G,KAAK0G,SAAS,CAACM,EAAaJ,KACxCG,EAAOH,GAAS,GAChBI,EAAYxF,SAASyF,IACjB,MAAMpB,EAAQoB,EAAOC,WAEjB,cAAoBrB,IAEjBA,GAASoB,EAAOjB,eACf,UAAgBH,KAAWA,EAAM7E,QAIzC+F,EAAOH,GAAO1F,KAAK,CACf2E,MAAOA,EACPsB,SAAUF,EAAOlB,iBACjBqB,KAAMH,EAAOhB,mBAIlBc,EAGX,SAASnF,GACL,IACKA,EAAKZ,UAEA,WAAiBhB,KAAK2G,SAA2B,KAAhB3G,KAAK2G,UACpCxH,OAAOkI,KAAKrH,KAAK0G,SAAS1F,OAGlC,OAAOY,EAEX,MAAM0F,EAAU,GACZX,EAAS,WAAiB3G,KAAK2G,QACzB3G,KAAK2G,OAAOY,cACZvH,KAAK2G,OACXD,EAAU1G,KAAKwH,aAwBnB,OAvBA,UAAgB5F,GAAOI,IACnB,GAAe,KAAX2E,GAAiB3G,KAAKyH,gBAAgBzF,EAAK2E,GAAS,CACpD,IAAIe,GAAY,EAChB,UAAgBhB,GAAS,CAACiB,EAAcf,KACpC,IAAIQ,GAAO,EACX,MAAMQ,EAASD,EAAaV,QAAQA,IAC5BA,EAAOG,OACPA,GAAO,GAEJpH,KAAK6H,oBAAoB7F,EAAI4E,GAAQK,EAAOpB,MAAOoB,EAAOE,aAGjES,EAAO5G,SAAW2G,EAAa3G,QAC1BoG,GAAQQ,EAAO5G,OAAS,IAE7B0G,GAAY,MAGhBA,GACAJ,EAAQpG,KAAKc,OAIlBsF,EAGH,gBAAgBQ,EAAmBnB,GACvC,OAAI,WAAiBmB,KACR3I,OAAOkI,KAAKS,GAAUC,MAAM9I,GAClB,cAARA,GAAuBe,KAAKyH,gBAAgBK,EAAS7I,GAAM0H,QAIrE,WAAiBmB,IAAaA,GAAYnB,GACvC,WAAiBmB,IAAcA,EAAA,uBAA2CnB,IAO9E,oBACJmB,EACAnB,EACAQ,GAEA,GAAI,WAAiBR,GACjB,QAASxH,OAAO6I,OAAOrB,GAAQoB,MAAMlC,GAAU7F,KAAK6H,oBAAoBC,EAAUjC,EAAOsB,KAE7F,GAAI,WAAiBW,GACjB,QAAS3I,OAAOkI,KAAKS,GAAUC,MAAM9I,GAClB,cAARA,GAAuBe,KAAK6H,oBAAoBC,EAAS7I,GAAM0H,EAAQQ,KAGtF,GAAI,cAAoBA,IAA0B,SAAbA,EACjC,OAASW,EAAA,uBAA4CnB,EAAA,eAErD,OAAQQ,G,IACC,IACD,OAAOW,EAAWnB,E,IACjB,IACD,OAAOmB,EAAWnB,E,IACjB,KACD,OAAOmB,GAAYnB,E,IAClB,KACD,OAAOmB,GAAYnB,E,IAClB,KAED,OAAOmB,GAAYnB,E,QAEnB,OAAO,ICvIpB,MCOMsB,EALQ,SAAe,oBAAqB,I,UAC1C,YHoDT,WAQF,MAAO,CACHC,SAAU,IACVjK,QAAS,CACL8B,WAAY,cACZoI,YAAa,WAEjBC,iBAAkB,CACdhC,SAAU,IACVL,iBAAkB,IAClBC,cAAe,IACfQ,QAAS,KAEbtC,WAAYwB,M,QGvEP,YFyIP,WACF,OAAOe,K,UEzII,WDLqC,CAChDxI,QAAS,CACL8B,WAAY,eAEhBoE,aAAc,KACdC,SAAU,0MCE+BE,KCPvC,MAAO+D,EAIT,YAAYtI,GAFL,KAAAuI,WAAY,EAGftI,KAAKD,WAAaA,EAGtB,YACIC,KAAKD,WAAW6B,KAAKJ,SAASQ,IAC1BA,EAAIuG,YAAkC,IAArBvG,EAAIwG,cAAyBxI,KAAKsI,aAI3D,SACI,IAAK,IAAIxJ,EAAI,EAAGA,EAAIkB,KAAKD,WAAW6B,KAAKZ,OAAQlC,IAC7C,IAAKkB,KAAKD,WAAW6B,KAAK9C,GAAGyJ,aAAuD,IAAzCvI,KAAKD,WAAW6B,KAAK9C,GAAG0J,aAE/D,YADAxI,KAAKsI,WAAY,GAIzBtI,KAAKsI,WAAatI,KAAKD,WAAW6B,KAAK6G,MAAMzG,IACjCA,EAAIuG,aAAmC,IAArBvG,EAAIwG,eAItC,cACI,OAAOxI,KAAKD,WAAW6B,KAAKqF,QAAQjF,GACzBA,EAAIuG,aAAmC,IAArBvG,EAAIwG,eAIrC,cACI,OAAqC,IAA9BxI,KAAK0I,cAAc1H,QChClC,MAAM2H,EAGF,UACQ,cAAoB3I,KAAKgC,IAAIwG,gBAC7BxI,KAAKgC,IAAkB,cAAI,ICFvC,MAAM4G,EAOF,YAAY/H,EAAkBgI,GAC1B7I,KAAKa,SAAWA,EAChBb,KAAK6I,OAASA,EAEdhI,EAASiI,GAAG,SAAS,KACjB,MAAMC,EAAW/I,KAAKD,WAAWiJ,SAASN,cACtCK,EAAS/H,SACThB,KAAKiJ,gBAAgB,CAACF,aACtB/I,KAAK6I,OAAOK,aAKxB,WACI,MAAMC,EAAcnJ,KAAKD,WAAWiJ,SAASG,cACzCA,IAAgBnJ,KAAKoJ,eACrBpJ,KAAKoJ,aAAeD,EACpBnJ,KAAKa,SAASwI,KAAK,WAAYF,EAAc,WAAa,Q,gCCzBtE,MAMaG,EANQ,SAAe,oBAAqB,I,QAC5C,YHiCP,WACF,OAAOjB,K,UGjCI,YFMT,WACF,MAAO,CACHH,SAAU,KACV9D,SAAU,uIAEVmF,SAAS,EACTC,OAAO,EACPvL,QAAS,CACL8B,WAAY,eAEhBqI,iBAAkB,CACdpG,IAAK,aAETmC,aAAc,KACdD,WAAYyE,M,UEnBL,eCNT,WACF,MAAO,CACHT,SAAU,KACVjK,QAAS,cACTmG,SAAU,sIAEVmF,SAAS,M,UDCF,mBD0BT,WACF,MAAO,CACHrB,SAAU,KACVqB,SAAS,EACTC,OAAO,EACPvL,QAAS,CACL8B,WAAY,eAEhBqI,iBAAkB,CACda,gBAAiB,KAErB/E,WAAY0E,MCnCyBtE,KEFvC,MAAOmF,EAAb,cACY,KAAAC,UAA8D,GAC9D,KAAAC,YAAc,EACd,KAAAC,cAAgB,EAGxB,UAAUC,EAAwBC,GAC9B,MAAMC,EAAaC,IACf,MAAMrL,EAAIsL,WAAWD,GACrB,OAAQE,MAAMvL,IAAMwL,SAASxL,IAEjC,GAAIkL,EAAGnI,OAASoI,EAAGpI,KA0Bf,OAAOmI,EAAGnI,KAAOoI,EAAGpI,MAAQ,EAAI,EAzBhC,GAAgB,WAAZmI,EAAGnI,KAAmB,CACtB,GAAIqI,EAAUF,EAAGhE,QAAUkE,EAAUD,EAAGjE,OACpC,OAAOoE,WAAWJ,EAAGhE,OAASoE,WAAWH,EAAGjE,QAAU,EAAI,EAG9DgE,EAAGhE,MAAQgE,EAAGhE,MAAM0B,cACpBuC,EAAGjE,MAAQiE,EAAGjE,MAAM0B,kBACD,WAAZsC,EAAGnI,OAGO,OAAbmI,EAAGhE,OAAkB,WAAiBgE,EAAGhE,SACzCgE,EAAGhE,MAAQgE,EAAGO,OAED,OAAbN,EAAGjE,OAAkB,WAAiBiE,EAAGjE,SACzCiE,EAAGjE,MAAQiE,EAAGM,QAGtB,OAAIP,EAAGhE,QAAUiE,EAAGjE,MACZ,aAAmBgE,EAAGhE,MAAMwE,eACrBR,EAAGhE,MAAMwE,cAAcP,EAAGjE,OAE1BgE,EAAGhE,MAAQiE,EAAGjE,OAAS,EAAI,OAJ1C,EAYR,SAASe,EAAe1C,GACd0C,KAAS5G,KAAK0J,YAChB1J,KAAK0J,UAAU9C,GAAS,IAE5B5G,KAAK0J,UAAU9C,GAAO1F,KAAKgD,GAC3BlE,KAAK2J,cAGT,WAAW/C,EAAe1C,GACtBlE,KAAK0J,UAAU9C,GAAOC,OAAO7G,KAAK0J,UAAU9C,GAAOE,QAAQ5C,GAAa,GACnElE,KAAK0J,UAAU9C,GAAO5F,eAChBhB,KAAK0J,UAAU9C,GAG1B5G,KAAK2J,cAGT,SAASW,GACL,MAAMC,EAAQ,GACVC,EAASxK,KAAKyK,WAAWH,GAO7B,OANA,UAAgBE,GAAQ,CAACE,EAAKC,KAC1BJ,EAAMrJ,KAAK,CACPyJ,MACAD,WAGDH,EAGH,eAAeK,EAAmBJ,GACjB,MAAjBI,EAAU,GACVJ,EAAOI,EAAUC,UAAU,IAAM,OAEjCL,EAAOI,GAAa,MAIpB,WAAWN,GACf,MAAME,EAAS,GAUf,OATI,YAAkBF,KACd,WAAiBA,GACjBtK,KAAK8K,eAAeR,EAAYE,GACzB,UAAgBF,IACvBA,EAAW9I,SAASuB,IAChB/C,KAAK8K,eAAe/H,EAAMyH,OAI/BA,EAMX,YAAYF,GACR,IAAK,SAAeA,EAAYtK,KAAK+K,aAAe/K,KAAK4J,gBAAkB5J,KAAK2J,YAAa,CACzF,MAAMa,EAASxK,KAAKyK,WAAWH,GAS/B,OAPA,UAAgBtK,KAAK0J,WAAW,CAACsB,EAAUpE,KACvCoE,EAASxJ,SAAS0C,IACdA,EAAW+G,YAAYT,EAAO5D,UAGtC5G,KAAK+K,WAAa,OAAaT,GAC/BtK,KAAK4J,cAAgB5J,KAAK2J,aACnB,EAEX,OAAO,GC9GT,MAAOuB,EAMT,YAAYrK,EAAkB8E,EAAqBkD,GAC/C7I,KAAK2F,OAASA,EACd3F,KAAKa,SAAWA,EAEhBA,EAASiI,GAAG,SAAUqC,IAClB,GAAKA,EAAEC,SAMA,CACC,WAAiBpL,KAAKD,WAAWwK,OACjCvK,KAAKD,WAAWwK,MAAQ,CAACvK,KAAKD,WAAWwK,OACjC,UAAgBvK,KAAKD,WAAWwK,SACxCvK,KAAKD,WAAWwK,MAAQ,IAE5B,IAAIc,GAAQ,EACZrL,KAAKD,WAAWwK,MAAMe,KAAKf,GACnBA,IAAUvK,KAAK2F,OAAe,QAC9B0F,GAAQ,EACD,IAAIrL,KAAK2F,OAAe,UACxB4E,IAAU,IAAIvK,KAAK2F,OAAe,UACzC0F,GAAQ,EACDrL,KAAK2F,OAAe,QAExB4E,IAENc,GACDrL,KAAKD,WAAWwK,MAAMrJ,KAAKlB,KAAK2F,OAAe,aAvB/C3F,KAAKD,WAAWwK,QAAUvK,KAAK2F,OAAe,OAC9C3F,KAAKD,WAAWwK,MAAQ,IAAMvK,KAAK2F,OAAe,OAElD3F,KAAKD,WAAWwK,MAAQvK,KAAK2F,OAAe,OAuBpDkD,EAAOK,YAIf,UACIlJ,KAAKD,WAAWwL,OAAOC,SAASxL,KAAK2F,OAAe,OAAG3F,MAG3D,aACIA,KAAKD,WAAWwL,OAAOE,WAAWzL,KAAK2F,OAAe,OAAG3F,MAM7D,YAAY0L,GACJ1L,KAAK0L,QAAUA,IACX1L,KAAK0L,OACL1L,KAAKa,SAAS8K,YAAY,WAAa3L,KAAK0L,OAE5CA,GACA1L,KAAKa,SAAS+K,SAAS,WAAaF,GAExC1L,KAAK0L,MAAQA,I,yCCjEzB,MAIaG,EAJM,SAAe,kBAAmB,I,QACxC,UFqHP,WACF,OAAOpC,K,UErHI,UDoET,WACF,MAAO,CACHvB,SAAU,IACVjK,QAAS,CACL8B,WAAY,eAEhBqI,kBAAkB,EAClBlE,WAAYgH,MCzEqB5G,KCkBnC,MAAOwH,EA4BT,YACIjL,EACAhB,EACAkM,EACAC,EACAlM,EACAmM,EACAC,EACAC,EACApM,EACAqM,EACAlG,EACAqF,EACAvC,GA/BI,KAAAqD,YAAc,CAACC,GAAI,EAAGC,QAAS,MAMhC,KAAA3K,KAAkC,GAClC,KAAA4K,WAAa,EACb,KAAAC,cAAgB,EAyBnBzM,KAAKa,SAAWA,EAChBb,KAAKH,UAAYA,EACjBG,KAAK+L,QAAUA,EACf/L,KAAKgM,QAAUA,EACfhM,KAAKF,GAAKA,EACVE,KAAKiM,MAAQA,EACbjM,KAAKkM,SAAWA,EAChBlM,KAAKmM,KAAOA,EAEZnM,KAAK0M,kBAAoB3M,EACzBC,KAAK2M,WAAa,IAAIP,EACtBpM,KAAKkG,SAAW,IAAIA,EACpBlG,KAAKuL,OAAS,IAAIA,EAClBvL,KAAKgJ,SAAW,IAAIA,EAAShJ,MAC7BA,KAAKG,KAAOJ,EAAWI,KAG3B,UACQ,cAAoBH,KAAKkF,WACzBlF,KAAKkF,QAAUlF,KAAK0M,kBAAkBxH,SAEtC,cAAoBlF,KAAK4M,UACzB5M,KAAK4M,OAAS5M,KAAK0M,kBAAkBE,QAErC,cAAoB5M,KAAK6M,kBACzB7M,KAAK6M,eAAiB7M,KAAK0M,kBAAkBG,gBAE7C,YAAkB7M,KAAK8M,SAAW,aAAmB9M,KAAK+M,cACtD,aAAmB/M,KAAK0M,kBAAkBM,2BAC1ChN,KAAK+M,WAAa/M,KAAK0M,kBAAkBM,0BAEzChN,KAAK+M,WAAa,CAACE,EAAOC,EAAQ3C,EAAO5D,EAAQD,EAASxD,KACtD,MAAMiK,EAAWnN,KAAKF,GAAGsN,QAazB,OAZApN,KAAKiM,MAAMoB,KAA0BnK,EAAK,CACtCoK,kBAAmB,EACnBL,MAAOA,EACPC,OAAQA,EACR3C,MAAOA,EACP5D,OAAQA,EACRD,QAASA,I,MACJ6G,IACLJ,EAASK,QAAQD,EAAS3L,S,OACrB,WACLuL,EAASM,YAENN,EAASO,UAI5B1N,KAAKqG,aAGT,WAAWC,GACH,eAAgBA,GAChBtG,KAAKqG,aAIb,WACQrG,KAAKuL,OAAOoC,YAAY3N,KAAKuK,QAC7BvK,KAAKqG,aAIb,aAII,IAAIkG,EAEJ,GADAvM,KAAK4N,SAAU,EACX,aAAmB5N,KAAK+M,YAA5B,CACIR,EAAU,EACuB,OAA7BvM,KAAKqM,YAAYE,UACjBvM,KAAKkM,SAAS2B,OAAO7N,KAAKqM,YAAYE,SACtCA,EAAU,KAEd,MAAMD,IAAOtM,KAAKqM,YAAYC,GAC9BtM,KAAKqM,YAAYE,QAAUvM,KAAKkM,UAAS,KACrClM,KAAK+M,WACD/M,KAAKkF,SAAUlF,KAAK2M,WAAWlI,KAAO,GAAKzE,KAAKkF,QAChDlF,KAAKuL,OAAOuC,SAAS9N,KAAKuK,OAC1BvK,KAAKkG,SAASS,OAAQ3G,KAAKkG,SAASsB,aAAcxH,KAAK8M,OAAL,MAC9C/F,IAEJ,GACI,cAAoBA,EAAOnF,QACvB,WAAiBmF,EAAOgH,SACxB,WAAiBhH,EAAOiH,eAE5B,MAAM,IAAIpK,MAAM,oCAEhB5D,KAAKqM,YAAYC,KAAOA,IACxBtM,KAAK4B,KAAOmF,EAAOnF,KACnB5B,KAAKwM,WAAazF,EAAOgH,MACzB/N,KAAKyM,cAAgB1F,EAAOiH,cACxBhO,KAAK2M,WAAWlI,KAAO,IAAMzE,KAAK4B,KAAKZ,QACvChB,KAAKiO,WAAW,O,OAGlB9C,IACNnL,KAAKmM,KAAK+B,MAAM/C,GACZnL,KAAKqM,YAAYC,KAAOA,IACxBtM,KAAK4B,KAAO,GACZ5B,KAAKwM,WAAa,EAClBxM,KAAKyM,cAAgB,M,SAElB,KACHzM,KAAKqM,YAAYC,KAAOA,IACxBtM,KAAK2M,WAAWwB,SAASnO,KAAKyM,cAAezM,KAAKkF,SAClDlF,KAAKgJ,SAASoF,SACdpO,KAAK4N,SAAU,EACf5N,KAAKqM,YAAYE,QAAU,WAGpCA,QAGPA,EAAU,EACuB,OAA7BvM,KAAKqM,YAAYE,UACjBvM,KAAKkM,SAAS2B,OAAO7N,KAAKqM,YAAYE,SACtCA,EAAU,IAEdvM,KAAKqM,YAAYE,QAAUvM,KAAKkM,UAAS,KACrClM,KAAK4B,KAAO,OAAa5B,KAAKD,YAC9BC,KAAKwM,WAAaxM,KAAK4B,KAAKZ,OAC5BhB,KAAK4B,KAAO5B,KAAKkG,SAASmI,SAASrO,KAAK4B,MACxC5B,KAAKyM,cAAgBzM,KAAK4B,KAAKZ,OAC/BhB,KAAK4B,KAAO5B,KAAKgM,QAAQ,UAAbhM,CAAwBA,KAAK4B,KAAM5B,KAAKuK,OAAO,EAAOvK,KAAKuL,OAAO+C,WAC9EtO,KAAK2M,WAAWwB,SAASnO,KAAK4B,KAAKZ,OAAQhB,KAAKkF,SAChDlF,KAAK4B,KAAO5B,KAAKgM,QAAQ,UAAbhM,CAAwBA,KAAK4B,KAAM5B,KAAKkF,QAASlF,KAAK2M,WAAWhI,MAAQ,GACrF3E,KAAKgJ,SAASoF,SACdpO,KAAKqM,YAAYE,QAAU,KAC3BvM,KAAK4N,SAAU,IAChBrB,GAGP,WAAW9H,GACP,MAAM8J,EAAevO,KAAK2M,WAAWlI,KACxB,SAATA,EACIzE,KAAK2M,WAAWlI,KAAO,GACvBzE,KAAK2M,WAAWlI,OAEJ,SAATA,EACHzE,KAAK2M,WAAWlI,KAAOzE,KAAK2M,WAAWjI,OACvC1E,KAAK2M,WAAWlI,OAEZyF,MAAMzF,KACdzE,KAAK2M,WAAWlI,KAAOA,GAEvB8J,IAAiBvO,KAAK2M,WAAWlI,MACjCzE,KAAKqG,aAELrG,KAAK4M,QACL5M,KAAKwO,SACDzJ,KAAK0J,MACDzO,KAAKa,SAAS,GAAG6N,wBAAwBC,KACtC3O,KAAK+L,QAAQ6C,aAAe5O,KAAKH,UAAU,GAAGgP,gBAAgBC,YACjE9O,KAAK0M,kBAAkBqC,aAC3B,KAKJ,SAASC,EAAgBC,GAC7B,MAAMC,EAAMlP,KAAK+L,QAAQoD,QACrBxK,EAAQyK,YAAYC,MACpBC,EAAQC,IACJ,MAAMC,EAAUD,EAAK5K,EACjB6K,GAAW,IACXxP,KAAK+L,QAAQyC,SAAS,EAAGQ,IAG7BhP,KAAK+L,QAAQyC,SAAS,EAAGU,EAAMnK,KAAK0K,IAAK1K,KAAK2K,GAAK,GAAMT,EAAWO,KAAaN,EAAMF,IACvFhP,KAAK+L,QAAQ4D,sBAAsBL,KAE3CtP,KAAK+L,QAAQ4D,sBAAsBL,I,iJChP3C,MAAMM,GCWN,MCNA,EDMyB,SAAe,aAAc,CAClD3H,EAAkBzC,EAAsBnB,EAAkBiF,EAAkBuC,I,SAElE,aEuCR,MAAN,cACW,KAAA3G,QAAU,GACV,KAAA0H,QAAS,EACT,KAAAC,eAAmC,CACtC,CAACgD,OAAQ,GAAI/N,KAAM,MACnB,CAAC+N,OAAQ,GAAI/N,KAAM,MACnB,CAAC+N,OAAQ,GAAI/N,KAAM,MACnB,CAAC+N,OAAQ,IAAK/N,KAAM,OACpB,CAAC+N,OAAQ,IAAK/N,KAAM,OACpB,CAAC+N,OAAQvK,IAAUxD,KAAM,cAEtB,KAAAiN,aAAe,EACf,KAAA5O,KAAwB,CAC3B2P,MAAO,kBACPC,KAAM,oBACNC,KAAM,kBACNC,KAAM,kBACN3I,QAAS,UACT4I,KAAM,IACNhL,QAAS,qBACTyB,OAAQ,YACRwJ,gBAAiB,iBACjBC,OAAQ,SACRC,oBAAqB,kBACrBC,cAAe,qBACfC,kBAAmB,yBACnBC,gBAAiB,YACjBnQ,UAAW,YACXoQ,KAAM,SACNC,IAAK,MACLC,kBAAmB,wBACnBC,UAAW,mCAER,KAAA3Q,YAAyD,CAC5DwQ,KAAM,CACFtQ,KAAMH,KAAKG,KAAKsQ,MAEpBC,IAAK,CACDvQ,KAAMH,KAAKG,KAAKuQ,IAChB7O,UAAUV,GACC,IAAMA,EAAIoI,QAAQ,IAAK,MAAQ,MAOlD,OACI,OAAOvJ,KAGX,mBAAmB0B,GACF,SAATA,GAEAmP,MAAM7Q,KAAKG,KAAKwQ,sB,UF5Fb,cFqOT,WAYF,MAAO,CACHzI,SAAU,IACVsB,OAAO,EACPpB,iBAAkB,CACdrI,WAAY,IACZmF,QAAS,IACT0H,OAAQ,IACRC,eAAgB,IAChBtC,MAAO,KACPuC,MAAO,IACPC,WAAY,KAEhB5I,aAAc,aACdD,WAAY4H,M,UE7PL,oBDZT,WACF,MAAO,CACH5D,SAAU,IACVjK,QAAS,CACL8B,WAAY,eAEhBoE,aAAc,KACdiE,kBAAkB,EAClBlE,WAAY0L,EACZpG,OAAO,EACPpF,SAAU,yK,UCGH,WGlBqC,CAChDnG,QAAS,CACL8B,WAAY,eAEhBqE,SAAU,mJ,UHeC,WIpBqC,CAChDnG,QAAS,CACL8B,WAAY,eAEhBqE,SAAU,wU,UJiBC,YKpBsC,CACjDnG,QAAS,CACL8B,WAAY,eAEhB+Q,SAAU,CACNC,eAAgB,MAEpB5M,aAAc,KACdC,SAAU,wH,ULaC,iBMrB2C,CACtDnG,QAAS,CACL8B,WAAY,eAEhBoE,aAAc,KACdsB,YAAY,EACZrB,SAAA,+bNiBuCE,M","file":"angularjs-bootstrap4-table-tools.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angularjs-bootstrap-4\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularjs-bootstrap4-table-tools\", [\"angular\", \"angularjs-bootstrap-4\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularjs-bootstrap4-table-tools\"] = factory(require(\"angular\"), require(\"angularjs-bootstrap-4\"));\n\telse\n\t\troot[\"angularjs-bootstrap4-table-tools\"] = factory(root[\"angular\"], root[\"angularjs-bootstrap-4\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__734__, __WEBPACK_EXTERNAL_MODULE__635__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__734__;","module.exports = __WEBPACK_EXTERNAL_MODULE__635__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions, IController, IDocumentService, IQService} from 'angular';\nimport {ITableToolsExportType, TableToolsProvider} from '../table-tools.provider';\nimport {TableToolsController} from '../table-tools.directive';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nexport class TtExportController implements IController {\n    private $document: IDocumentService;\n    private $q: IQService;\n    private readonly tableTools: TableToolsProvider;\n    private exportTypes: { [p: string]: ITableToolsExportType };\n    private separators: { lang: string; separator: string }[];\n    private modal: boolean;\n    private exporting: string | false;\n    private config: { fileName: string, columnNames: boolean, separator: string };\n    private tableToolsCtrl: TableToolsController;\n    private columns: { txt: string, idx: number, exp: boolean }[];\n    private _copyElement: JQLite;\n\n    constructor(\n        $document: IDocumentService,\n        $q: IQService,\n        tableTools: TableToolsProvider\n    ) {\n        this.$document = $document;\n        this.$q = $q;\n        this.tableTools = tableTools;\n\n        this.exportTypes = tableTools.exportTypes;\n        this.separators = [\n            {lang: ',', separator: ','},\n            {lang: ';', separator: ';'},\n            {lang: tableTools.lang.tabulator, separator: '\\t'}\n        ];\n        this.modal = false;\n        this.exporting = false;\n        this.config = {\n            separator: ',',\n            fileName: '',\n            columnNames: true\n        };\n    }\n\n    showExport(): void {\n        const headers = this.tableToolsCtrl.$element[0]\n            .querySelectorAll('table > thead > tr:last-child > th');\n        this.columns = [];\n        for (let h = 0; h < headers.length; h++) {\n            if (!angular.element(headers[h]).hasClass('ignore-export')) {\n                this.columns.push({\n                    txt: headers[h].innerHTML,\n                    idx: h,\n                    exp: true\n                });\n            }\n        }\n        this.config.fileName = this.$document[0].title;\n        this.modal = true;\n    }\n\n    flipSelection(): void {\n        this.columns.forEach((column) => {\n            column.exp = !column.exp;\n        });\n    }\n\n    doExport(type: string, config: ITableToolsExportType): void {\n        this.exporting = type;\n        const indexes = [],\n            data = [],\n            parseText = (text: string): string => {\n                if (angular.isFunction(config['parseText'])) {\n                    text = config['parseText'](text);\n                }\n                return text;\n            },\n            appendRow = () => {\n                if (row.length) {\n                    if (type === 'csv' || type === 'copy') {\n                        data.push(row.join(this.config.separator));\n                    } else {\n                        data.push(row);\n                    }\n                    row = [];\n                }\n            };\n        let row = [];\n        // get columns to export\n        this.columns.forEach((column) => {\n            if (column.exp) {\n                indexes.push(column.idx);\n                if (this.config.columnNames) {\n                    row.push(parseText(column.txt));\n                }\n            }\n        });\n        appendRow();\n        // grab data\n        const columns = this.tableToolsCtrl.$element[0]\n            .querySelectorAll<HTMLTableCellElement>('table > tbody > tr:not(.ignore-export) > td');\n        let rowId = -1;\n        for (let c = 0; c < columns.length; c++) {\n            if (indexes.includes(columns[c].cellIndex)) {\n                if (columns[c].parentNode['rowIndex'] !== rowId) {\n                    rowId = columns[c].parentNode['rowIndex'];\n                    appendRow();\n                }\n                row.push(parseText(angular.element(columns[c]).text().trim()));\n            }\n        }\n        appendRow();\n        // export\n        let exportCallback;\n        switch (type) {\n            case 'copy':\n                exportCallback = (data) => {\n                    const copyElement = this._getCopyElement();\n                    copyElement.val(data.join('\\n'));\n                    copyElement[0].focus();\n                    (copyElement[0] as HTMLInputElement).select();\n                    this.$document[0].execCommand('copy');\n                };\n                break;\n            case 'csv':\n                exportCallback = (data, config) => {\n                    const a = this.$document[0].createElement('a'),\n                        item = '\\ufeff' + data.join('\\n'),\n                        blob = new Blob([item], {type: 'text/csv;utf-8'}),\n                        url = URL.createObjectURL(blob);\n                    a.setAttribute('style', 'display: none');\n                    a.href = url;\n                    a.download = config.fileName + '.csv';\n                    this.$document[0].body.appendChild(a);\n                    a.click();\n                    a.remove();\n                };\n                break;\n            default:\n                if (angular.isFunction(config['callback'])) {\n                    exportCallback = config['callback'];\n                } else {\n                    throw new Error('No callback provided for export type: ' + type);\n                }\n                break;\n        }\n        this.$q.when(exportCallback(data, this.config)).then(() => {\n            if (angular.isFunction(this.tableTools['exportNotification'])) {\n                this.tableTools['exportNotification'](type);\n            }\n            this.exporting = false;\n            this.modal = false;\n        });\n    }\n\n    private _getCopyElement(): JQLite {\n        if (angular.isUndefined(this._copyElement)) {\n            this._copyElement = angular.element(\n                '<textarea style=\"position:absolute;top:-1000px;left:-1000px\"></textarea>'\n            );\n            angular.element(this.$document[0].body).append(this._copyElement);\n        }\n        return this._copyElement;\n    }\n}\n\nexport const ttExportComponent: IComponentOptions = {\n    controller: TtExportController,\n    controllerAs: 'vm',\n    require: {\n        tableToolsCtrl: '^tableTools'\n    },\n    templateUrl: 'src/templates/export.html'\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport * as angular from 'angular';\nimport angularBS from 'angularjs-bootstrap-4';\nimport {ttExportComponent} from './tt-export.component';\n\nconst exportModule = angular.module('tableTools.export', [angularBS])\n    .component('ttExport', ttExportComponent);\n\nexport const tableToolsExport = exportModule.name;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nexport class TtPagination {\n    private readonly pagesAround: number;\n    private readonly visiblePageCount: number;\n    public page = 1;\n    public pages = 1;\n    public start = 0;\n    public end = 0;\n    public items: number[] = [];\n\n    constructor(visiblePageCount = 5) {\n        this.visiblePageCount = visiblePageCount;\n        this.pagesAround = Math.floor(visiblePageCount / 2);\n    }\n\n    paginate(resultsLength: number, perPage: number): void {\n        this.pages = Math.ceil(resultsLength / perPage);\n        if (this.pages === 0) {\n            this.pages = 1;\n        }\n        if (this.page > this.pages) {\n            this.page = this.pages;\n        }\n        this.items = [];\n        const pagesAfter = this.pages - this.page; // number of pages after currently selected page\n        let i = this.page // we set a starting page in here\n            - (pagesAfter < this.pagesAround // we won't be able to display all pages after current page\n                ? this.visiblePageCount - 1 - pagesAfter // so we display the difference before current page\n                : this.pagesAround);\n        if (i < 1) {\n            i = 1;\n        }\n        do {\n            this.items.push(i);\n            i++;\n        } while (this.items.length < this.visiblePageCount && i <= this.pages);\n        this.start = perPage === Infinity\n            ? 1\n            : Math.min(\n                ((this.page - 1) * perPage) + 1,\n                resultsLength\n            );\n        this.end = Math.min(this.page * perPage, resultsLength);\n    }\n}\n\nexport function ttPaginationFactory(): typeof TtPagination {\n    return TtPagination;\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const ttPerPageComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools'\n    },\n    controllerAs: 'vm',\n    template: '<div class=\"form-group\">'\n        + '<label>{{::vm.tableTools.lang.perPage}}&nbsp;</label>'\n        + '<select class=\"form-control\" ng-model=\"vm.tableTools.perPage\" ng-change=\"vm.tableTools.filterData()\"'\n        + ' ng-options=\"o.number as o.text for o in vm.tableTools.perPageOptions\"></select>'\n        + '</div>'\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport * as angular from 'angular';\nimport {ttPaginationFactory} from './tt-pagination.factory';\nimport {ttPerPageComponent} from './tt-per-page.component';\nimport {ttPaginationComponent} from './tt-pagination.component';\n\nconst paginationModule = angular.module('tableTools.pagination', [])\n    .factory('ttPagination', ttPaginationFactory)\n    .component('ttPerPage', ttPerPageComponent)\n    .component('ttPagination', ttPaginationComponent);\n\nexport const tableToolsPagination = paginationModule.name;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const ttPaginationComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools'\n    },\n    controllerAs: 'vm',\n    transclude: true,\n    templateUrl: 'src/templates/pagination.html'\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IAttributes, IController, IDirective, IOnChangesObject} from 'angular';\nimport * as angular from 'angular';\nimport {operator} from './tt-search.factory';\nimport {TableToolsController} from '../table-tools.directive';\n\n/**\n * @ngInject\n */\nexport class TtFilterController implements IController {\n    private readonly $attrs: IAttributes;\n    private checkboxValue: unknown;\n    private ngModel: unknown;\n    private tableTools: TableToolsController;\n    public ttFilterEmpty: string;\n    public ttFilterOperator: operator;\n    public ttFilterOr: boolean;\n    public ttFilter: string;\n\n    constructor($attrs: IAttributes) {\n        this.$attrs = $attrs;\n        if ('type' in $attrs && $attrs['type'] === 'checkbox') {\n            $attrs.$observe('value', (value) => {\n                this.checkboxValue = value;\n            });\n        }\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.ttFilterOperator)) {\n            this.ttFilterOperator = '==';\n        }\n        if (angular.isUndefined(this.ttFilterEmpty)) {\n            this.ttFilterEmpty = '';\n        }\n        this.ttFilterOr = 'ttFilterOr' in this.$attrs || ('type' in this.$attrs && this.$attrs['type'] === 'checkbox');\n        this.tableTools.ttSearch.registerFilter(this.ttFilter, this);\n        this.tableTools.filterData();\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if ('ngModel' in changes && 'tableTools' in this) {\n            this.tableTools.filterData();\n        }\n    }\n\n    $onDestroy(): void {\n        this.tableTools.ttSearch.unregisterFilter(this.ttFilter, this);\n    }\n\n    getValue(): unknown {\n        if (angular.isDefined(this.checkboxValue)) {\n            return this.ngModel ? this.checkboxValue : this.ttFilterEmpty;\n        }\n        return this.ngModel;\n    }\n}\n\nexport function ttFilterDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @param {string} ttFilter\n     * @param {string} ttFilterOperator\n     * @param {string} ttFilterEmpty\n     * @param {string} ttFilterOr\n     */\n    return {\n        restrict: 'A',\n        require: {\n            tableTools: '^tableTools',\n            ngModelCtrl: 'ngModel'\n        },\n        bindToController: {\n            ttFilter: '@',\n            ttFilterOperator: '@',\n            ttFilterEmpty: '@',\n            ngModel: '<'\n        },\n        controller: TtFilterController\n    };\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport * as angular from 'angular';\nimport {TtFilterController} from './tt-filter.directive';\n\nexport type operator = '>' | '<' | '>=' | '<=' | '==' | 'like';\n\nexport interface IFilterValue {\n    value: unknown,\n    operator: operator,\n    isOr: boolean\n}\n\nexport class TtSearch {\n    private filters: { [filter: string]: TtFilterController[] } = {};\n    public search = '';\n\n    registerFilter(field: string, controller: TtFilterController): void {\n        if (!(field in this.filters)) {\n            this.filters[field] = [];\n        }\n        this.filters[field].push(controller);\n    }\n\n    unregisterFilter(field: string, controller: TtFilterController): void {\n        this.filters[field].splice(this.filters[field].indexOf(controller), 1);\n        if (!this.filters[field].length) {\n            delete this.filters[field];\n        }\n    }\n\n    getFilters(): { [field: string]: IFilterValue[] } {\n        const result = {};\n        angular.forEach(this.filters, (controllers, field) => {\n            result[field] = [];\n            controllers.forEach((filter) => {\n                const value = filter.getValue();\n                if (\n                    angular.isUndefined(value)\n                    // eslint-disable-next-line eqeqeq\n                    || value == filter.ttFilterEmpty\n                    || (angular.isArray(value) && !value.length)\n                ) { // skip empty filters\n                    return;\n                }\n                result[field].push({\n                    value: value,\n                    operator: filter.ttFilterOperator,\n                    isOr: filter.ttFilterOr\n                });\n            })\n        });\n        return result;\n    }\n\n    doSearch(data: Record<string, unknown>[]): Record<string, unknown>[] {\n        if (\n            !data.length\n            || (\n                (!angular.isString(this.search) || this.search === '')\n                && !Object.keys(this.filters).length\n            )\n        ) {\n            return data;\n        }\n        const results = [],\n            search = angular.isString(this.search)\n                ? this.search.toLowerCase()\n                : this.search,\n            filters = this.getFilters();\n        angular.forEach(data, (row) => {\n            if (search === '' || this.hasSearchString(row, search)) {\n                let allPassed = true;\n                angular.forEach(filters, (filterValues, field) => {\n                    let isOr = false;\n                    const passed = filterValues.filter((filter) => {\n                        if (filter.isOr) {\n                            isOr = true;\n                        }\n                        return this.compareWithOperator(row[field], filter.value, filter.operator);\n                    });\n                    if (\n                        passed.length !== filterValues.length\n                        && !(isOr && passed.length > 0)\n                    ) {\n                        allPassed = false;\n                    }\n                });\n                if (allPassed) {\n                    results.push(row);\n                }\n            }\n        });\n        return results;\n    }\n\n    private hasSearchString(variable: unknown, search: string): boolean {\n        if (angular.isObject(variable)) {\n            return !!Object.keys(variable).find((key) => {\n                return key !== '$$hashKey' && this.hasSearchString(variable[key], search);\n            });\n        } else if (\n            // eslint-disable-next-line eqeqeq\n            (angular.isNumber(variable) && variable == search)\n            || (angular.isString(variable) && (variable as string).toLowerCase().includes(search))\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    private compareWithOperator(\n        variable: unknown | { [key: string]: unknown },\n        search: unknown | { [key: string]: unknown },\n        operator: operator\n    ): boolean {\n        if (angular.isObject(search)) {\n            return !!Object.values(search).find((value) => this.compareWithOperator(variable, value, operator));\n        }\n        if (angular.isObject(variable)) {\n            return !!Object.keys(variable).find((key) => {\n                return key !== '$$hashKey' && this.compareWithOperator(variable[key], search, operator);\n            });\n        }\n        if (angular.isUndefined(operator) || operator === 'like') {\n            return !(variable as string).toLowerCase().includes((search as string).toLowerCase());\n        } else {\n            switch (operator) {\n                case '>':\n                    return variable > search;\n                case '<':\n                    return variable < search;\n                case '>=':\n                    return variable >= search;\n                case '<=':\n                    return variable <= search;\n                case '==':\n                    // eslint-disable-next-line eqeqeq\n                    return variable == search;\n                default:\n                    return true;\n            }\n        }\n    }\n}\n\nexport function ttSearchFactory(): typeof TtSearch {\n    return TtSearch;\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const ttSearchComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools'\n    },\n    controllerAs: 'vm',\n    template: '<div class=\"form-group\">'\n        + '<input type=\"text\" class=\"form-control\" ng-model=\"vm.tableTools.ttSearch.search\" '\n        + 'ng-change=\"vm.tableTools.filterData()\" placeholder=\"{{::vm.tableTools.lang.search}}\"/>'\n        + '</div>'\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport * as angular from 'angular';\nimport {ttFilterDirective} from './tt-filter.directive';\nimport {ttSearchFactory} from './tt-search.factory';\nimport {ttSearchComponent} from './tt-search.component';\n\nconst searchModule = angular.module('tableTools.search', [])\n    .directive('ttFilter', ttFilterDirective)\n    .factory('ttSearch', ttSearchFactory)\n    .component('ttSearch', ttSearchComponent);\n\nexport const tableToolsSearch = searchModule.name;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {TableToolsController} from '../table-tools.directive';\n\nexport class TtSelect {\n    private tableTools: TableToolsController;\n    public selectAll = false;\n\n    constructor(tableTools: TableToolsController) {\n        this.tableTools = tableTools;\n    }\n\n    changeAll(): void {\n        this.tableTools.data.forEach((row) => {\n            row.ttSelected = row.ttSelectable !== false ? this.selectAll : false;\n        });\n    }\n\n    change(): void {\n        for (let d = 0; d < this.tableTools.data.length; d++) {\n            if (!this.tableTools.data[d].ttSelected && this.tableTools.data[d].ttSelectable !== false) {\n                this.selectAll = false;\n                return;\n            }\n        }\n        this.selectAll = !this.tableTools.data.some((row) => {\n            return !row.ttSelected && row.ttSelectable !== false;\n        });\n    }\n\n    getSelected(): Record<string, unknown>[] {\n        return this.tableTools.data.filter((row) => {\n            return row.ttSelected && row.ttSelectable !== false;\n        })\n    }\n\n    hasSelected(): boolean {\n        return this.getSelected().length !== 0;\n    }\n}\n\nexport function ttSelectFactory(): typeof TtSelect {\n    return TtSelect;\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IDirective} from 'angular';\nimport * as angular from 'angular';\n\nclass TtSelectDirectiveController {\n    private row: Record<string, unknown>;\n\n    $onInit() {\n        if (angular.isUndefined(this.row.ttSelectable)) {\n            this.row['ttSelectable'] = true;\n        }\n    }\n}\n\nexport function ttSelectDirective(): IDirective {\n    return {\n        restrict: 'AE',\n        template: '<input type=\"checkbox\" ng-model=\"vm.row.ttSelected\" ng-disabled=\"!vm.row.ttSelectable\" '\n            + 'ng-change=\"vm.tableTools.ttSelect.change()\"/>',\n        replace: true,\n        scope: true,\n        require: {\n            tableTools: '^tableTools'\n        },\n        bindToController: {\n            row: '=ttSelect'\n        },\n        controllerAs: 'vm',\n        controller: TtSelectDirectiveController\n    };\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IDirective, IScope} from 'angular';\nimport {TableToolsController} from '../table-tools.directive';\n\n/**\n * @ngInject\n */\nclass TtSelectedClickDirectiveController {\n    private $element: JQLite;\n    private tableTools: TableToolsController;\n    private _hasSelected;\n    private ttSelectedClick: (locals: {selected: Record<string, unknown>[]}) => void;\n    private $scope: IScope;\n\n    constructor($element: JQLite, $scope: IScope) {\n        this.$element = $element;\n        this.$scope = $scope;\n\n        $element.on('click', () => {\n            const selected = this.tableTools.ttSelect.getSelected();\n            if (selected.length) {\n                this.ttSelectedClick({selected});\n                this.$scope.$apply();\n            }\n        })\n    }\n\n    $doCheck() {\n        const hasSelected = this.tableTools.ttSelect.hasSelected();\n        if (hasSelected !== this._hasSelected) {\n            this._hasSelected = hasSelected;\n            this.$element.attr('disabled', hasSelected ? 'disabled' : null);\n        }\n    }\n}\n\nexport function ttSelectedClickDirective(): IDirective {\n    return {\n        restrict: 'AE',\n        replace: true,\n        scope: true,\n        require: {\n            tableTools: '^tableTools',\n        },\n        bindToController: {\n            ttSelectedClick: '&'\n        },\n        controller: TtSelectedClickDirectiveController\n    };\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport * as angular from 'angular';\nimport {ttSelectFactory} from './tt-select.factory';\nimport {ttSelectDirective} from './tt-select.directive';\nimport {ttSelectAllDirective} from './tt-select-all.directive';\nimport {ttSelectedClickDirective} from './tt-selected-click.directive';\n\nconst selectModule = angular.module('tableTools.select', [])\n    .factory('ttSelect', ttSelectFactory)\n    .directive('ttSelect', ttSelectDirective)\n    .directive('ttSelectAll', ttSelectAllDirective)\n    .directive('ttSelectedClick', ttSelectedClickDirective);\n\nexport const tableToolsSelect = selectModule.name;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IDirective} from 'angular';\n\nexport function ttSelectAllDirective(): IDirective {\n    return {\n        restrict: 'AE',\n        require: '^tableTools',\n        template: '<input type=\"checkbox\" class=\"tt-select-all\" ng-model=\"tableTools.ttSelect.selectAll\" '\n            + 'ng-change=\"tableTools.ttSelect.changeAll()\"/>',\n        replace: true\n    };\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport * as angular from 'angular';\nimport {IFilterOrderByItem} from 'angular';\nimport {TtSortDirectiveController} from './tt-sort.directive';\n\nexport interface IOrder {\n    col: string,\n    dir: 'asc' | 'desc'\n}\n\nexport class TtSort {\n    private sortItems: { [field: string]: TtSortDirectiveController[] } = {};\n    private sortItemsId = 0;\n    private lastSortItems = 0\n    private _lastOrder;\n\n    compareFn(v1: IFilterOrderByItem, v2: IFilterOrderByItem): -1 | 0 | 1 {\n        const isNumeric = (string: string) => {\n            const n = parseFloat(string);\n            return !isNaN(n) && isFinite(n);\n        };\n        if (v1.type === v2.type) {\n            if (v1.type === 'string') {\n                if (isNumeric(v1.value) && isNumeric(v2.value)) {\n                    return parseFloat(v1.value) < parseFloat(v2.value) ? -1 : 1;\n                }\n                // Compare strings case-insensitively\n                v1.value = v1.value.toLowerCase();\n                v2.value = v2.value.toLowerCase();\n            } else if (v1.type === 'object') {\n                // For basic objects, use the position of the object\n                // in the collection instead of the value\n                if (v1.value !== null && angular.isObject(v1.value)) {\n                    v1.value = v1.index;\n                }\n                if (v2.value !== null && angular.isObject(v2.value)) {\n                    v2.value = v2.index;\n                }\n            }\n            if (v1.value !== v2.value) {\n                if (angular.isFunction(v1.value.localeCompare)) {\n                    return v1.value.localeCompare(v2.value);\n                } else {\n                    return v1.value < v2.value ? -1 : 1;\n                }\n            }\n        } else {\n            return v1.type < v2.type ? -1 : 1;\n        }\n    }\n\n    register(field: string, controller: TtSortDirectiveController): void {\n        if (!(field in this.sortItems)) {\n            this.sortItems[field] = [];\n        }\n        this.sortItems[field].push(controller);\n        this.sortItemsId++;\n    }\n\n    unregister(field: string, controller: TtSortDirectiveController): void {\n        this.sortItems[field].splice(this.sortItems[field].indexOf(controller), 1);\n        if (!this.sortItems[field].length) {\n            delete this.sortItems[field];\n\n        }\n        this.sortItemsId++;\n    }\n\n    getOrder(orderValue: string | string[] | undefined): IOrder[] {\n        const order = [],\n            parsed = this.parseOrder(orderValue);\n        angular.forEach(parsed, (dir, col) => {\n            order.push({\n                col,\n                dir\n            });\n        });\n        return order;\n    }\n\n    private parseOrderItem(orderItem: string, parsed: Record<string, 'asc' | 'desc'>): void {\n        if (orderItem[0] === '-') {\n            parsed[orderItem.substring(1)] = 'desc';\n        } else {\n            parsed[orderItem] = 'asc';\n        }\n    }\n\n    private parseOrder(orderValue: string | string[] | undefined): Record<string, 'asc' | 'desc'> {\n        const parsed = {};\n        if (angular.isDefined(orderValue)) {\n            if (angular.isString(orderValue)) {\n                this.parseOrderItem(orderValue, parsed);\n            } else if (angular.isArray(orderValue)) {\n                orderValue.forEach((item) => {\n                    this.parseOrderItem(item, parsed);\n                })\n            }\n        }\n        return parsed;\n    }\n\n    /**\n     * Propagate order change to all child sort directives\n     */\n    orderUpdate(orderValue: string | string[] | undefined): boolean {\n        if (!angular.equals(orderValue, this._lastOrder) || this.lastSortItems !== this.sortItemsId) {\n            const parsed = this.parseOrder(orderValue);\n            //\n            angular.forEach(this.sortItems, (sortItem, field) => {\n                sortItem.forEach((controller) => {\n                    controller.updateState(parsed[field]);\n                });\n            });\n            this._lastOrder = angular.copy(orderValue);\n            this.lastSortItems = this.sortItemsId;\n            return true;\n        }\n        return false;\n    }\n}\n\nexport function ttSortFactory(): typeof TtSort {\n    return TtSort;\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {TableToolsController} from '../table-tools.directive';\nimport {IAttributes, IDirective, IScope} from 'angular';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nexport class TtSortDirectiveController {\n    private $element: JQLite;\n    private state: string;\n    private tableTools: TableToolsController;\n    private readonly $attrs: IAttributes;\n\n    constructor($element: JQLite, $attrs: IAttributes, $scope: IScope) {\n        this.$attrs = $attrs;\n        this.$element = $element;\n\n        $element.on('click', (e) => {\n            if (!e.shiftKey) { // change sorting direction\n                if (this.tableTools.order === this.$attrs['ttSort']) {\n                    this.tableTools.order = '-' + this.$attrs['ttSort'];\n                } else {\n                    this.tableTools.order = this.$attrs['ttSort'];\n                }\n            } else { // append to current order array\n                if (angular.isString(this.tableTools.order)) {\n                    this.tableTools.order = [this.tableTools.order];\n                } else if (!angular.isArray(this.tableTools.order)) {\n                    this.tableTools.order = [];\n                }\n                let found = false;\n                this.tableTools.order.map((order) => {\n                    if (order === this.$attrs['ttSort']) {\n                        found = true;\n                        return `-${this.$attrs['ttSort']}`;\n                    } else if (order === `-${this.$attrs['ttSort']}`) {\n                        found = true;\n                        return this.$attrs['ttSort'];\n                    }\n                    return order;\n                });\n                if (!found) {\n                    this.tableTools.order.push(this.$attrs['ttSort']);\n                }\n            }\n            $scope.$apply();\n        });\n    }\n\n    $onInit(): void {\n        this.tableTools.ttSort.register(this.$attrs['ttSort'], this);\n    }\n\n    $onDestroy(): void {\n        this.tableTools.ttSort.unregister(this.$attrs['ttSort'], this);\n    }\n\n    /**\n     * Update sorting item class\n     */\n    updateState(state: string): void {\n        if (this.state !== state) {\n            if (this.state) {\n                this.$element.removeClass('sorting-' + this.state);\n            }\n            if (state) {\n                this.$element.addClass('sorting-' + state);\n            }\n            this.state = state;\n        }\n    }\n}\n\nexport function ttSortDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: {\n            tableTools: '^tableTools'\n        },\n        bindToController: true,\n        controller: TtSortDirectiveController\n    };\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport * as angular from 'angular';\nimport {ttSortFactory} from './tt-sort.factory';\nimport {ttSortDirective} from './tt-sort.directive';\n\nconst sortModule = angular.module('tableTools.sort', [])\n    .factory('ttSort', ttSortFactory)\n    .directive('ttSort', ttSortDirective);\n\nexport const tableToolsSort = sortModule.name;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {\n    IController, IDirective,\n    IDocumentService,\n    IFilterService,\n    IHttpService, ILogService, IOnChangesObject,\n    IQService,\n    ITimeoutService,\n    IWindowService\n} from 'angular';\nimport {\n    IPerPageOption,\n    ITableToolsLang,\n    ITableToolsResponse,\n    TableToolsProvider,\n    TableToolsResolver\n} from './table-tools.provider';\nimport {TtPagination} from './pagination/tt-pagination.factory';\nimport {TtSearch} from './search/tt-search.factory';\nimport {TtSelect} from './select/tt-select.factory';\nimport {TtSort} from './sort/tt-sort.factory';\nimport * as angular from 'angular';\n\n/**\n * @ngInject\n */\nexport class TableToolsController implements IController {\n    private $document: IDocumentService;\n    private $window: IWindowService;\n    private readonly $filter: IFilterService;\n    private $q: IQService;\n    private $http: IHttpService;\n    private readonly $timeout: ITimeoutService;\n    private $log: ILogService;\n    private tableToolsOptions: TableToolsProvider;\n    private lang: ITableToolsLang;\n    private lastResolve = {id: 0, timeout: null};\n    public $element: JQLite;\n    public pagination: TtPagination;\n    public ttSearch: TtSearch;\n    public ttSort: TtSort;\n    public ttSelect: TtSelect;\n    public data: Record<string, unknown>[] = [];\n    public dataLength = 0;\n    public filteredCount = 0;\n    public order?: string | string[];\n    public perPage: number;\n    public scroll: boolean;\n    public perPageOptions: IPerPageOption[];\n    public ttUrl?: string;\n    public ttResolver: TableToolsResolver;\n    public loading: boolean;\n    public tableTools: Record<string, unknown>[];\n\n    constructor(\n        $element: JQLite,\n        $document: IDocumentService,\n        $window: IWindowService,\n        $filter: IFilterService,\n        $q: IQService,\n        $http: IHttpService,\n        $timeout: ITimeoutService,\n        $log: ILogService,\n        tableTools: TableToolsProvider,\n        ttPagination: typeof TtPagination,\n        ttSearch: typeof TtSearch,\n        ttSort: typeof TtSort,\n        ttSelect: typeof TtSelect\n    ) {\n        this.$element = $element;\n        this.$document = $document;\n        this.$window = $window;\n        this.$filter = $filter;\n        this.$q = $q;\n        this.$http = $http;\n        this.$timeout = $timeout;\n        this.$log = $log;\n\n        this.tableToolsOptions = tableTools;\n        this.pagination = new ttPagination();\n        this.ttSearch = new ttSearch();\n        this.ttSort = new ttSort();\n        this.ttSelect = new ttSelect(this);\n        this.lang = tableTools.lang;\n    }\n\n    $onInit(): void {\n        if (angular.isUndefined(this.perPage)) {\n            this.perPage = this.tableToolsOptions.perPage;\n        }\n        if (angular.isUndefined(this.scroll)) {\n            this.scroll = this.tableToolsOptions.scroll;\n        }\n        if (angular.isUndefined(this.perPageOptions)) {\n            this.perPageOptions = this.tableToolsOptions.perPageOptions;\n        }\n        if (angular.isDefined(this.ttUrl) && !angular.isFunction(this.ttResolver)) {\n            if (angular.isFunction(this.tableToolsOptions.defaultTableToolsResolver)) {\n                this.ttResolver = this.tableToolsOptions.defaultTableToolsResolver;\n            } else {\n                this.ttResolver = (limit, offset, order, search, filters, url) => {\n                    const deferred = this.$q.defer<ITableToolsResponse>();\n                    this.$http.post<ITableToolsResponse>(url, {\n                        getTableToolsData: 1,\n                        limit: limit,\n                        offset: offset,\n                        order: order,\n                        search: search,\n                        filters: filters\n                    }).then((response) => {\n                        deferred.resolve(response.data);\n                    }).catch(function() {\n                        deferred.reject();\n                    });\n                    return deferred.promise;\n                };\n            }\n        }\n        this.filterData();\n    }\n\n    $onChanges(changes: IOnChangesObject): void {\n        if ('tableTools' in changes) {\n            this.filterData();\n        }\n    }\n\n    $doCheck(): void {\n        if (this.ttSort.orderUpdate(this.order)) {\n            this.filterData();\n        }\n    }\n\n    filterData(): void {\n        // if (angular.isUndefined(this.ttSearch)) { // tableTools are not yet fully initialized\n        //     return;\n        // }\n        let timeout;\n        this.loading = true;\n        if (angular.isFunction(this.ttResolver)) {\n            timeout = 0;\n            if (this.lastResolve.timeout !== null) {\n                this.$timeout.cancel(this.lastResolve.timeout);\n                timeout = 750;\n            }\n            const id = ++this.lastResolve.id;\n            this.lastResolve.timeout = this.$timeout(() => {\n                this.ttResolver(\n                    this.perPage, (this.pagination.page - 1) * this.perPage,\n                    this.ttSort.getOrder(this.order),\n                    this.ttSearch.search, this.ttSearch.getFilters(), this.ttUrl\n                ).then((result) => {\n                    /** @var {{data: Array, count: number, countFiltered: number}} result */\n                    if (\n                        angular.isUndefined(result.data)\n                        || !angular.isNumber(result.count)\n                        || !angular.isNumber(result.countFiltered)\n                    ) {\n                        throw new Error('TableTools - wrong result format');\n                    }\n                    if (this.lastResolve.id === id) {\n                        this.data = result.data;\n                        this.dataLength = result.count;\n                        this.filteredCount = result.countFiltered;\n                        if (this.pagination.page > 1 && !this.data.length) {\n                            this.changePage(1);\n                        }\n                    }\n                }).catch((e) => {\n                    this.$log.error(e);\n                    if (this.lastResolve.id === id) {\n                        this.data = [];\n                        this.dataLength = 0;\n                        this.filteredCount = 0;\n                    }\n                }).finally(() => {\n                    if (this.lastResolve.id === id) {\n                        this.pagination.paginate(this.filteredCount, this.perPage);\n                        this.ttSelect.change();\n                        this.loading = false;\n                        this.lastResolve.timeout = null;\n                    }\n                });\n            }, timeout);\n            return;\n        }\n        timeout = 0;\n        if (this.lastResolve.timeout !== null) {\n            this.$timeout.cancel(this.lastResolve.timeout);\n            timeout = 50;\n        }\n        this.lastResolve.timeout = this.$timeout(() => {\n            this.data = angular.copy(this.tableTools);\n            this.dataLength = this.data.length;\n            this.data = this.ttSearch.doSearch(this.data);\n            this.filteredCount = this.data.length;\n            this.data = this.$filter('orderBy')(this.data, this.order, false, this.ttSort.compareFn);\n            this.pagination.paginate(this.data.length, this.perPage);\n            this.data = this.$filter('limitTo')(this.data, this.perPage, this.pagination.start - 1);\n            this.ttSelect.change();\n            this.lastResolve.timeout = null;\n            this.loading = false;\n        }, timeout);\n    }\n\n    changePage(page: number | 'prev' | 'next'): void {\n        const originalPage = this.pagination.page;\n        if (page === 'prev') {\n            if (this.pagination.page > 1) {\n                this.pagination.page--;\n            }\n        } else if (page === 'next') {\n            if (this.pagination.page < this.pagination.pages) {\n                this.pagination.page++;\n            }\n        } else if (!isNaN(page)) {\n            this.pagination.page = page;\n        }\n        if (originalPage !== this.pagination.page) {\n            this.filterData();\n        }\n        if (this.scroll) {\n            this.scrollTo(\n                Math.round(\n                    this.$element[0].getBoundingClientRect().top\n                    + (this.$window.pageYOffset || this.$document[0].documentElement.scrollTop)\n                ) + this.tableToolsOptions.scrollOffset,\n                1000\n            );\n        }\n    }\n\n    private scrollTo(target: number, duration: number): void {\n        const cur = this.$window.scrollY,\n            start = performance.now(),\n            step = (ts) => {\n                const elapsed = ts - start;\n                if (elapsed >= 1000) {\n                    this.$window.scrollTo(0, target);\n                    return;\n                }\n                this.$window.scrollTo(0, cur - Math.sin((Math.PI / 2) / (duration / elapsed)) * (cur - target));\n                this.$window.requestAnimationFrame(step);\n            };\n        this.$window.requestAnimationFrame(step);\n    }\n}\n\nexport function tableToolsDirective(): IDirective {\n    /**\n     * @ngdoc directive\n     * @name tableTools\n     *\n     * @param {expression|Array} tableTools\n     * @param {expression|number} perPage\n     * @param {expression} perPageOptions\n     * @param {expression|number} order\n     * @param {expression|string} ttUrl\n     * @param ttResolver\n     */\n    return {\n        restrict: 'A',\n        scope: true,\n        bindToController: {\n            tableTools: '<',\n            perPage: '<',\n            scroll: '<',\n            perPageOptions: '<',\n            order: '=?',\n            ttUrl: '@',\n            ttResolver: '<'\n        },\n        controllerAs: 'tableTools',\n        controller: TableToolsController\n    };\n}\n\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IDirective} from 'angular';\nimport {TableToolsController} from 'ts/lib/table-tools.directive';\n\nclass TtRowPlaceholderDirectiveController {\n    tableTools: TableToolsController;\n}\n\nexport function ttRowPlaceholderDirective(): IDirective {\n    return {\n        restrict: 'A',\n        require: {\n            tableTools: '^tableTools'\n        },\n        controllerAs: 'vm',\n        bindToController: true,\n        controller: TtRowPlaceholderDirectiveController,\n        scope: true,\n        template: '<td colspan=\"100%\" ng-if=\"!vm.tableTools.data.length\">'\n            + '<tt-loading></tt-loading>'\n            + '<span ng-if=\"!vm.tableTools.loading\">{{::vm.tableTools.lang.noResults}}</span>'\n            + '</td>'\n    }\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport * as angular from 'angular';\nimport {tableToolsExport} from './export/export.module';\nimport {TableToolsProvider} from './table-tools.provider';\nimport {tableToolsPagination} from './pagination/pagination.module';\nimport {tableToolsSearch} from './search/search.module';\nimport {tableToolsSelect} from './select/select.module';\nimport {tableToolsSort} from './sort/sort.module';\nimport {tableToolsDirective} from './table-tools.directive';\nimport {ttFooterComponent} from './tt-footer.component';\nimport {ttHeaderComponent} from './tt-header.component';\nimport {ttLoadingComponent} from './tt-loading.component';\nimport {ttResultsCountComponent} from './tt-results-count.component';\nimport {ttRowPlaceholderDirective} from './tt-row-placeholder.directive';\n\nconst tableToolsModule = angular.module('tableTools', [\n    tableToolsSearch, tableToolsPagination, tableToolsExport, tableToolsSelect, tableToolsSort\n])\n    .provider('tableTools', TableToolsProvider)\n    .directive('tableTools', tableToolsDirective)\n    .directive('ttRowPlaceholder', ttRowPlaceholderDirective)\n    .component('ttFooter', ttFooterComponent)\n    .component('ttHeader', ttHeaderComponent)\n    .component('ttLoading', ttLoadingComponent)\n    .component('ttResultsCount', ttResultsCountComponent);\n\nexport const tableTools = tableToolsModule.name;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {tableTools} from './lib/table-tools.module';\nexport {TableToolsProvider} from './lib/table-tools.provider';\nexport {TtPagination} from './lib/pagination/tt-pagination.factory';\nexport {operator, IFilterValue, TtSearch} from './lib/search/tt-search.factory';\nexport {TtSelect} from './lib/select/tt-select.factory';\nexport {TtSort, IOrder} from './lib/sort/tt-sort.factory';\n\nexport {TableToolsController} from './lib/table-tools.directive';\n\nexport default tableTools;\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IPromise, IServiceProvider} from 'angular';\nimport {IFilterValue} from './search/tt-search.factory';\nimport {IOrder} from './sort/tt-sort.factory';\n\nexport interface ITableToolsExportType {\n    lang: string,\n    parseText?: (txt: string) => string,\n    callback?: (data: unknown[][], config: {\n        fileName: string,\n        columnNames: boolean,\n        separator: string\n    }) => IPromise<void>\n}\n\nexport interface ITableToolsLang {\n    next: string;\n    flipSelection: string;\n    last: string;\n    prev: string;\n    csv: string;\n    exportColumnNames: string;\n    exportSeparator: string;\n    exportChooseColumns: string;\n    filteredResults: string;\n    search: string;\n    perPage: string;\n    noResults: string;\n    from: string;\n    copiedToClipboard: string;\n    copy: string;\n    results: string;\n    export: string;\n    first: string;\n    tabulator: string\n}\n\nexport interface IPerPageOption {\n    number: number,\n    text: string\n}\n\nexport interface ITableToolsResponse {\n    data: Record<string, unknown>[],\n    count: number,\n    countFiltered: number\n}\n\nexport type TableToolsResolver = (\n    limit: number,\n    offset: number,\n    order: IOrder[],\n    search: string,\n    filters: { [field: string]: IFilterValue[] },\n    url: string\n) => IPromise<ITableToolsResponse>;\n\nexport class TableToolsProvider implements IServiceProvider {\n    public perPage = 25;\n    public scroll = true;\n    public perPageOptions: IPerPageOption[] = [\n        {number: 10, text: '10'},\n        {number: 25, text: '25'},\n        {number: 50, text: '50'},\n        {number: 100, text: '100'},\n        {number: 200, text: '200'},\n        {number: Infinity, text: 'Wszystkie'}\n    ];\n    public scrollOffset = 0;\n    public lang: ITableToolsLang = {\n        first: 'Pierwsza strona',\n        prev: 'Poprzednia strona',\n        next: 'Następna strona',\n        last: 'Ostatnia strona',\n        results: 'Wyniki:',\n        from: 'z',\n        perPage: 'Wyników na stronę:',\n        search: 'Szukaj...',\n        filteredResults: 'Filtrowanie z:',\n        export: 'Export',\n        exportChooseColumns: 'Wybierz kolumny',\n        flipSelection: 'odwróć zaznaczenie',\n        exportColumnNames: 'Eksportuj nazwy kolumn',\n        exportSeparator: 'Separator',\n        tabulator: 'Tabulator',\n        copy: 'Kopiuj',\n        csv: 'CSV',\n        copiedToClipboard: 'Skopiowano do schowka',\n        noResults: 'Nie znaleziono żadnych wyników!'\n    };\n    public exportTypes: { [name: string]: ITableToolsExportType } = {\n        copy: {\n            lang: this.lang.copy\n        },\n        csv: {\n            lang: this.lang.csv,\n            parseText(txt: string): string {\n                return '\"' + txt.replace('\"', '\"\"') + '\"';\n            }\n        }\n    };\n\n    public defaultTableToolsResolver?: TableToolsResolver;\n\n    $get(): this {\n        return this;\n    }\n\n    exportNotification(type: string): void {\n        if (type === 'copy') {\n            // eslint-disable-next-line no-alert\n            alert(this.lang.copiedToClipboard);\n        }\n    }\n}\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const ttFooterComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools'\n    },\n    template: '<div class=\"row\">'\n        + '<tt-results-count class=\"col align-self-center\"></tt-results-count>'\n        + '<tt-pagination class=\"col col-auto\"></tt-pagination>'\n        + '</div>'\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\nimport {IComponentOptions} from 'angular';\n\nexport const ttHeaderComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools',\n    },\n    template: '<div class=\"form-inline\">'\n        + '<tt-per-page></tt-per-page>'\n        + '<tt-loading></tt-loading>'\n        + '<tt-search class=\"ml-auto\"></tt-search>'\n        + '</div>'\n        + '<div class=\"row mt-3\">'\n        + '<tt-results-count class=\"col align-self-center\"></tt-results-count>'\n        + '<tt-pagination class=\"col col-auto pr-0\"></tt-pagination>'\n        + '<tt-export class=\"col col-auto pl-2\"></tt-export>'\n        + '</div>',\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const ttLoadingComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools'\n    },\n    bindings: {\n        extraCondition: '<?'\n    },\n    controllerAs: 'vm',\n    template: '<span ng-show=\"vm.tableTools.loading || vm.extraCondition\">'\n        + '&nbsp;<i class=\"fa fa-spinner fa-spin fa-lg\"></i></span>',\n};\n","/*\n * AngularJS TableTools Plugin\n *  Copyright (c) 2016-2021 Rodziu <mateusz.rohde@gmail.com>\n *  License: MIT\n */\n\nimport {IComponentOptions} from 'angular';\n\nexport const ttResultsCountComponent: IComponentOptions = {\n    require: {\n        tableTools: '^tableTools'\n    },\n    controllerAs: 'vm',\n    transclude: true,\n    templateUrl: 'src/templates/results-count.html'\n};\n"],"sourceRoot":""}